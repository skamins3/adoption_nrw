# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ga_d8BpZQq75HXhyZB76Fydri2jIEhfJ

Universität zu Köln

Humanwissenschaftliche Fakultät

Seminar: Machine learning to measure individual differences

Zu prüfendes Modul: Aufbaumodul 3- Erziehung und Bildung unter den Bedingungen der Heterogenität

Prüfer/in: Prof. Benjamin Gagl

# Inwieweit können demografische Merkmale wie Alter und Geschlecht genutzt werden, um Trends und Muster in der Adoption von Kindern und Jugendlichen vorherzusagen?

Eine Analyse mithilfe von Maschinellem Lernen

Verfasserin: Sandra Kaminska

Matrikelnummer: 7397718

Kontakt: skamins3@smail.uni-koeln.de

Studiengang: Zwei-Fach-Bachelor

Studienfächer: Erziehungswissenschaften und Kunstgeschichte Fachsemester: 5

Abgabedatum: 15.03.2024

# 1. Einleitung

Die Adoption von Kindern und Jugendlichen ist ein bedeutsamer und sensibler Bereich innerhalb der Erziehungswissenschaften, der eine Vielzahl von sozialen, rechtlichen und ethischen Fragen aufwirft. In diesem Zusammenhang spielen demografische Merkmale wie Alter und Geschlecht eine entscheidende Rolle bei der Untersuchung von Trends und Mustern im Adoptionsprozess. Insbesondere in Regionen wie Nordrhein-Westfalen, die eine vielfältige und dynamische demografische Landschaft aufweisen, ist es von besonderem Interesse, wie sich diese Merkmale auf die Adoption auswirken und ob sie genutzt werden können, um zukünftige Entwicklungen vorherzusagen.

Das Ziel dieser Arbeit ist es, mithilfe von maschinellem Lernen Trends und Muster in der Adoption von Kindern und Jugendlichen in Nordrhein-Westfalen zu untersuchen und zu analysieren, inwieweit demografische Merkmale wie Alter und Geschlecht zur Vorhersage dieser Trends genutzt werden können. Hierbei liegt der Fokus auf der Anwendung von regressionsbasierten maschinellen Lernmodellen, um die Daten zu trainieren und potenzielle Vorhersagemodelle zu entwickeln.

Diese Arbeit trägt dazu bei, das Verständnis für die Dynamik der Adoption von Kindern und Jugendlichen zu vertiefen und liefert Einblicke in die Möglichkeiten und Grenzen von maschinellem Lernen bei der Vorhersage sozialer Phänomene. Letztendlich zielt sie darauf ab, relevante Erkenntnisse für die Praxis und Politik im Bereich der Adoption zu generieren und einen Beitrag zur Weiterentwicklung der Erziehungswissenschaften zu leisten.

# 2. Theoretischer Hintergrund

2.1 Adoption: Definitionen und Prozesse

Die Adoption eines Kindes ist ein formeller Prozess, durch den ein Erwachsener die Vormundschaft über ein Kind übernimmt und die Rechte und Pflichten eines Elternteils erhält. Im Gegensatz zur Vormundschaft, die auf die Betreuung eines Kindes ausgerichtet ist, bewirkt die Adoption eine dauerhafte Veränderung des rechtlichen Status und erfordert eine formelle Anerkennung (Levesque, 2011).

In Deutschland gibt es verschiedene Arten von Adoptionen. Die Fremdadoption ist die häufigste Form, bei der ein Erwachsener die volle rechtliche Verantwortung für ein Kind übernimmt, wodurch sämtliche rechtlichen Bindungen zur Herkunftsfamilie erlöschen. Eine weitere verbreitete Form ist die Stiefkindadoption, bei der das leibliche Kind des Partners oder der Partnerin adoptiert wird, insbesondere wenn der andere leibliche Elternteil verstorben ist oder kein Kontakt besteht. Die Verwandtenadoption beinhaltet die Annahme eines verwandten Kindes, wie eines Neffen oder einer Nichte, wobei das Kind sein Verwandtschaftsverhältnis zu anderen Familienmitgliedern behält. Die Pflegekindadoption ist weniger verbreitet und bezieht sich auf die Adoption eines Pflegekindes durch seine Pflegeeltern. Schließlich ermöglicht die Sukzessivadoption Ehepartnern, ein Kind gemeinsam zu adoptieren, wobei ein Partner das bereits von dem anderen Partner adoptierte Kind ebenfalls annehmen kann (Familienportal).

Des Weiteren wird zwischen Inlandsadoption und Auslandsadoption unterschieden (Familienportal). Inlandsadoption bezieht sich auf die Adoption eines Kindes innerhalb des Landes. Der Prozess beginnt mit der Suche nach den besten Eltern für ein Kind, das aus verschiedenen Gründen nicht bei seinen leiblichen Eltern aufwachsen kann. Die rechtlichen Grundlagen erfordern in der Regel die Einwilligung beider leiblicher Elternteile sowie gegebenenfalls die Zustimmung des Kindes und seines gesetzlichen Vertreters. Nach Zustimmung und rechtskräftiger Adoption durch das Familiengericht erhält das Kind die rechtliche Stellung eines leiblichen Kindes der Adoptiveltern. Dies führt zu einer Veränderung der verwandtschaftlichen Verhältnisse, wobei in der Regel die Verwandtschaftsverhältnisse zur Herkunftsfamilie erlöschen und das Kind rechtlich mit der Adoptivfamilie verbunden ist. Eine neue Geburtsurkunde wird ausgestellt, auf der der Name des Kindes und der der Adoptiveltern erscheint. Der Vorname kann unter bestimmten Bedingungen geändert werden. Es gibt auch die Möglichkeit der Auslandsadoption, bei der das Kind vor der Adoption in einem anderen Land lebt und dann nach Deutschland zieht (ebd.).

Die Adoption ist ein umfassender Prozess, der von einer Adoptionsvermittlungsstelle begleitet wird und das Wohl des Kindes als oberste Priorität hat. Die Adoption kann entweder im Inland oder im Ausland erfolgen, wobei jeweils spezifische Schritte zu beachten sind (ebd.).

Für eine Inlandsadoption umfasst der Prozess folgende Schritte:

1. Bewerbung bei einer Adoptionsvermittlungsstelle, wie dem Jugendamt oder einer anerkannten nichtstaatlichen Vermittlungsstelle.
2. Eignungsprüfung, bei der die Fachkräfte der Vermittlungsstelle Ihre Eignung für die Adoption einschätzen.
3. Vorbereitung auf die Adoption und Wartezeit auf einen Kindervorschlag.
4. Auswahl als passende Eltern für ein Kind durch die Vermittlungsstelle und Übergabe des Kindes.
5. Adoptionspflegezeit, in der das Eltern-Kind-Verhältnis wächst, während das Jugendamt Vormund des Kindes bleibt.
6. Beantragung der Adoption beim Familiengericht und Erhalt des Adoptionsbeschlusses.
7. Kontinuierliche Unterstützung und Beratung durch die Vermittlungsstelle auch nach Abschluss des Adoptionsverfahrens.

Für eine Auslandsadoption sind die Schritte wie folgt:

1. Anmeldung bei einer Vermittlungsstelle für Auslandsadoptionen.
2. Eignungsprüfung, bestehend aus allgemeiner und länderspezifischer Prüfung durch die Auslandsvermittlungsstelle.
3. Übermittlung der Adoptionsbewerbung an die Fachstelle für Adoptionen im Herkunftsland des Kindes.
4. Beratung und Vorbereitung auf die Adoption während der Wartezeit auf einen Kindervorschlag.
5. Entscheidung über einen Kindervorschlag und Vorbereitung auf die Adoptionspflegezeit.
6. Reise ins Herkunftsland des Kindes zur Kennenlernphase und gegebenenfalls Durchführung der Adoptionspflegezeit.
7. Durchführung des Adoptionsverfahrens im Herkunftsland und Beantragung der Anerkennung der Adoption in Deutschland.
8. Einreise des Kindes nach Deutschland nach Erhalt der Einreisepapiere.
9. Kontinuierliche Unterstützung und Beratung durch die Vermittlungsstelle während des gesamten Prozesses.

Die Vermittlungsstelle steht während des gesamten Adoptionsverfahrens den Adoptiveltern zur Seite und bietet Beratung und Unterstützung an.

Für eine Adoption im Inland gelten bestimmte rechtliche und persönliche Voraussetzungen. Nach deutschem Recht müssen Adoptiveltern unbeschränkt geschäftsfähig sein und mindestens 25 Jahre alt sein, wobei bei verheirateten Paaren mindestens einer der Ehepartner 25 Jahre alt sein muss und der jüngere Ehepartner mindestens 21 Jahre alt sein sollte. Es gibt kein festgelegtes Höchstalter für Adoptiveltern, jedoch sollte der Altersunterschied zum adoptierten Kind einem natürlichen Abstand entsprechen.
Normalerweise wird eine Adoption von einem Ehepaar - unabhängig vom Geschlecht - gemeinsam durchgeführt. Aber auch Alleinstehende können ein Kind adoptieren. Die Eignung als Adoptiveltern wird von der Adoptionsvermittlungsstelle überprüft, wobei verschiedene Kriterien wie Persönlichkeit, partnerschaftliche Stabilität, Offenheit bezüglich der Adoptionsherkunft, Gesundheit, Erziehungsvorstellungen, Wohnverhältnisse und wirtschaftliche Stabilität berücksichtigt werden (ebd.).
Die Adoption eines Kindes durch Alleinstehende ist möglich, wird jedoch in speziellen Fällen in Betracht gezogen. Dabei steht das Wohl des Kindes im Vordergrund, und es wird bevorzugt, dass das Kind in einer stabilen familiären Umgebung aufwächst. Empfehlungen der Bundesarbeitsgemeinschaft der Landesjugendämter nennen Situationen, in denen eine Alleinstehende oder ein Alleinstehender für die Adoption eines Kindes in Betracht kommt, wie zum Beispiel eine bereits bestehende Beziehung zwischen der alleinstehenden Person und dem Kind, ein verwandtes Kind oder die Zustimmung der leiblichen Eltern zur Adoption durch die alleinstehende Person (ebd.).
Für eine Auslandsadoption gelten ähnliche Kriterien wie für eine Inlandsadoption, jedoch müssen Adoptiveltern zusätzlich bereit sein, sich mit der Herkunft des Kindes auseinanderzusetzen, die kulturellen und sozialen Hintergründe des Herkunftslandes zu verstehen und auf die besonderen Bedürfnisse des Kindes einzugehen, die sich aus seiner Herkunft ergeben können. Dies beinhaltet auch die Bereitschaft, mit Diskriminierung und Rassismus umzugehen, falls erforderlich (ebd.).

2.2 Maschinelles Lernen: Definition

Machine Learning ist ein Bereich der künstlichen Intelligenz, der sich mit der Entwicklung von Algorithmen und Modellen befasst, die es Computern ermöglichen, aus Daten zu lernen, ohne explizit die Beziehung zwischen den Modellausgaben (d.h. Vorhersagen) und der zugrunde liegenden Struktur der Daten (d.h. Muster) zu programmieren (Gagl, 2023). Diese Modelle basieren auf der Anzahl und Ausrichtung von Parametern, die während des Trainings angepasst werden können (d.h. Architektur des maschinellen Lernmodells), sowie der Menge, Qualität und Art der Trainingsdaten. Das Hauptziel des maschinellen Lernens besteht darin, Modelle zu entwickeln, die gut auf neue, ungesehene Daten generalisieren, d.h. das Modell sollte in der Lage sein, genaue Vorhersagen für die Trainingsdaten zu treffen, auf denen es trainiert wurde, sowie für neue, ungesehene Daten (ebd.).
"""



"""# 3. Methodik

In meiner Hausarbeit beschäftige ich mich mit der Methodik des Modelltrainings anhand von Daten zur Vorhersage von Adoptionstrends. Der Datensatz stammt von der OpenNRW-Plattform der Landesregierung Nordrhein-Westfalen und enthält Statistiken zu adoptierten Kindern und Jugendlichen nach Altersgruppen und Geschlecht für verschiedene Jahre.

Um mit dem Modelltraining zu beginnen, musste ich den Datensatz von GitHub laden, da ich anfangs Schwierigkeiten hatte, ihn in mein Colab-Notebook hochzuladen. Nach dem Laden musste ich einige Datenbereinigungen vornehmen, wie das Ersetzen von Semikolons durch Kommas und das Entfernen von nicht benötigten Zeilen, z. B. Daten zur Landesregierung NRW und zur Gesamtzahl der Adoptionen pro Jahr.

Mein Ziel ist es, ein Regressionsmodell zu trainieren, das Vorhersagen zu Adoptionstrends basierend auf Altersgruppen und Geschlecht ermöglicht. Ich möchte untersuchen, ob die vorhandenen Daten ausreichen, um Trends vorherzusagen und ob Merkmale wie Alter und Geschlecht als Indikatoren dienen können.

Die Verwendung von Regressionsmodellen ermöglicht es mir, die Beziehung zwischen den unabhängigen Variablen (Alter und Geschlecht) und der abhängigen Variablen (Adoptionszahlen) zu modellieren.

Es ist wichtig anzumerken, dass die Qualität meiner Vorhersagen stark von der Qualität und Repräsentativität der Daten abhängt. Daher ist es entscheidend, dass ich meine Daten sorgfältig überprüfe, säubere und vorbereite, bevor ich mit dem Modelltraining beginne.

# 4. Analyse und Ergebnisse

4.1 Maschinelles Lernen zur Vorhersagen
"""

import matplotlib.pyplot as plt
import pandas as pd
import pandas as pd
import requests
from io import StringIO
import numpy as np

from scipy.optimize import curve_fit
from sklearn.linear_model import LinearRegression, Ridge
from sklearn.model_selection import train_test_split, cross_val_score
from sklearn.metrics import mean_squared_error
from sklearn.feature_selection import RFECV

# Funktion zum Einlesen des CSV von Github
def read_csv_from_github(url):
    response = requests.get(url)
    data = response.content.decode('utf-8')
    return pd.read_csv(StringIO(data))

# CSV-URL
url = 'https://raw.githubusercontent.com/skamins3/adoption_nrw/main/adoption_nrw.csv'

# Daten einlesen
df = read_csv_from_github(url)
print(df)

# Filtern der Daten für die Jahre 2003 bis 2022
filtered_df = df[(df['Jahr'] >= 2003) & (df['Jahr'] <= 2022)]
x= df[['Jahr']]
y = df['Insgesamte Anzahl']

# Aufteilen. der Daten für X und y
reg = LinearRegression()
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size= 0.5)

# Berechnung der Korrelationskoeffizienten
reg.fit(x_train, y_train)
np.corrcoef(reg.predict(x_test),y_test)
print()

# Berechnung des Mean Squared Error für das Trainingsset
mse = mean_squared_error(reg.predict(x_train),y_train)
print("Mean squared error for the training set: {:.2f}".format(mse))

# Kreuzvalidierung und Berechnung der Scores
scores = cross_val_score(reg, x_train, y_train, cv=5, scoring="neg_mean_squared_error")*-1
print("Cross-validation scores: {}".format(scores))
print("Average score: {:.2f}".format(scores.mean()))

# Visualisierung der Trainingsdaten und der Vorhersage
plt.scatter(x_train,y_train, label="Traingsdaten")
plt.plot(x_train, reg.predict(x_train),color="r", label="Adoptions Vorhersage")
plt.legend()
plt.xlabel("Jahr")
plt.ylabel("Insgesamte Anzahl")
plt.title("Trainingsergebnisse")
plt.xlim([2003, 2022])
plt.ylim([0, 700])
plt.show()

#Visualisierung der Testdaten und der Vorhersage
plt.scatter(x_test,y_test, label="Testdaten")
plt.plot( x_test, reg.predict(x_test),color="r", label="Adoptions Vorhersage")
plt.legend()
plt.xlabel("Jahr")
plt.ylabel("Insgesamte Anzahl")
plt.title("Testergebnisse")
plt.xlim([2003, 2022])
plt.ylim([0, 700])
plt.show()

"""In diesem Skript habe ich Daten zu Adoptionen aus NRW von 2003 bis 2022 analysiert. Zuerst habe ich die Daten von GitHub eingelesen und dann auf den relevanten Zeitraum beschränkt. Anschließend habe ich ein lineares Regressionsmodell trainiert, um die Anzahl der Adoptionen im Zeitverlauf vorherzusagen. Nachdem ich das Modell trainiert habe, habe ich den Mean Squared Error für das Trainingsset berechnet und eine Kreuzvalidierung durchgeführt, um die Leistung des Modells zu bewerten.In diesem Fall beträgt der MSE 1554.33. Dies bedeutet, dass die durchschnittliche quadratische Abweichung zwischen den tatsächlichen und den vorhergesagten Werten im Trainingsdatensatz etwa 1554.33 beträgt.
Die "Cross-validation scores" geben die negativen mittleren quadratischen Fehler für jede der k-Falten im Kreuzvalidierungsprozess an. In diesem Fall sind die MSE-Werte für die 5 Faltungen: [132.75, 3902.26, 1555.68, 2123.10, 1626.28]. Ein niedrigerer MSE ist besser, da er darauf hinweist, dass das Modell genauere Vorhersagen für die Daten treffen kann. Der durchschnittliche MSE über alle Faltungen beträgt 1868.02.
Zusammenfassend bedeutet ein niedrigerer MSE, dass das Modell besser ist, da die durchschnittliche Abweichung zwischen den Vorhersagen und den tatsächlichen Werten geringer ist. Ein höherer MSE würde darauf hinweisen, dass das Modell weniger genau ist. In diesem Fall scheint das Modell mit einem MSE von 1554.33 für den Trainingsdatensatz und einem durchschnittlichen MSE von 1868.02 über die Kreuzvalidierung recht gut zu performen Schließlich habe ich die Trainings- und Testdaten sowie die Vorhersagen des Modells visualisiert, um deren Genauigkeit zu überprüfen.

Nun kann ich dieses Modell auf weitere Features anwenden.
"""

import matplotlib.pyplot as plt
import pandas as pd
import requests
from io import StringIO
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

# Funktion zum Einlesen des CSV von GitHub
def read_csv_from_github(url):
    response = requests.get(url)
    data = response.content.decode('utf-8')
    return pd.read_csv(StringIO(data))

# CSV-URL
url = 'https://raw.githubusercontent.com/skamins3/adoption_nrw/main/adoption_nrw.csv'

# Daten einlesen
df = read_csv_from_github(url)

# Filtern der Daten für die Jahre 2003 bis 2013
filtered_df = df[(df['Jahr'] >= 2003) & (df['Jahr'] <= 2022)]

# Kodieren des Geschlechts
label_encoder = LabelEncoder()
filtered_df['Geschlecht_encoded'] = label_encoder.fit_transform(filtered_df['Geschlecht'])

# Aufteilen der Daten in Trainings- und Testdatensätze
X = filtered_df[['Jahr', 'Geschlecht_encoded']]
y = filtered_df['Insgesamte Anzahl']

# Feature-Namen im Trainingsdatensatz überprüfen
print("Geschlechter im Trainingsdatensatz:")
print(x.columns)

# Aufteilen der Daten in Trainings- und Testdatensätze
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4, random_state=42)

# Lineare Regression Modell erstellen und trainieren
model = LinearRegression()
model.fit(X_train, y_train)

# Vorhersagen für den Testdatensatz machen
predictions = model.predict(X_test)

# Bewertung des Modells
mse = mean_squared_error(y_test, predictions)
print("Mean Squared Error: {:.2f}".format(mse))

# Kreuzvalidierung und Berechnung der Scores
scores = cross_val_score(reg, X_train, y_train, cv=5, scoring="neg_mean_squared_error")*-1
print("Cross-validation scores: {}".format(scores))
print("Average score: {:.2f}".format(scores.mean()))

reg.fit(X_train, y_train)
np.corrcoef(reg.predict(X_test),y_test)

# Aufteiung der Vorhersagen basierend auf Geschlecht_encoded
predictions_male = predictions[X_test['Geschlecht_encoded'] == 0]
predictions_female = predictions[X_test['Geschlecht_encoded'] == 1]
years_male = X_test[X_test['Geschlecht_encoded'] == 0]['Jahr']
years_female = X_test[X_test['Geschlecht_encoded'] == 1]['Jahr']

# Visualisierung der Testdaten und der Vorhersage: Geschlecht
plt.scatter(X_test[X_test['Geschlecht_encoded'] == 0]["Jahr"], y_test[X_test['Geschlecht_encoded'] == 0], color='blue', label="männlich")
plt.scatter(X_test[X_test['Geschlecht_encoded'] == 1]["Jahr"], y_test[X_test['Geschlecht_encoded'] == 1], color='red', label="weiblich")
plt.plot(years_male, predictions_male, color='blue', label="Regression Vorhersage (männlich)")
plt.plot(years_female, predictions_female, color='red', label="Regression Vorhersage (weiblich)")

plt.legend()
plt.xlabel("Jahr")
plt.ylabel("Insgesamte Anzahl")
plt.title("Testergebnisse")
plt.xlim([2002, 2023])
plt.ylim([0, 700])
plt.show()

# Visualisierung der Trainingsdaten und der Vorhersage: Geschlecht
plt.scatter(X_train[X_train['Geschlecht_encoded'] == 0]["Jahr"], y_train[X_train['Geschlecht_encoded'] == 0], color='blue', label="männlich")
plt.scatter(X_train[X_train['Geschlecht_encoded'] == 1]["Jahr"], y_train[X_train['Geschlecht_encoded'] == 1], color='red', label="weiblich")
plt.plot(years_male, predictions_male, color='blue', label="Regression Vorhersage (männlich)")
plt.plot(years_female, predictions_female, color='red', label="Regression Vorhersage (weiblich)")

plt.legend()
plt.xlabel("Jahr")
plt.ylabel("Insgesamte Anzahl")
plt.title("Traininsergebnisse")
plt.xlim([2002, 2023])
plt.ylim([0, 700])
plt.show()

"""Auch in diesem werden diebDaten zu Adoptionen aus Nordrhein-Westfalen (NRW) von GitHub eingelesen und gefiltert dann für den Zeitraum von 2003 bis 2022. Anschließend werden die Daten kodiert, wobei das Geschlecht der Adoptierenden in numerische Werte (0=männlich, 1=weiblich) umgewandelt wird.

Dann werden die Daten in Trainings- und Testdatensätze aufgeteilt, wobei 60% der Daten für das Training und 40% für das Testen verwendet werden. Ein lineares Regressionsmodell wird erstellt und auf den Trainingsdaten trainiert.

Danach werden Vorhersagen für den Testdatensatz gemacht und der Mean Squared Error (MSE) wird berechnet. In diesem Fall beträgt der MSE für das Testdatenset 2292.99.
Zudem wird eine Kreuzvalidierung durchgeführt. Ein niedrigerer Wert für den MSE in jedem Falten deutet darauf hin, dass das Modell besser in der Lage ist, die Daten zu generalisieren und konsistente Vorhersagen zu machen. Der durchschnittliche MSE über alle Faltungen beträgt 1814.75. Ein niedrigerer Durchschnittswert für den MSE zeigt an, dass das Modell insgesamt gut generalisiert und konsistente Leistung über verschiedene Datensätze aufweist.
Die Vorhersagen des Modells werden dann basierend auf dem kodierten Geschlecht aufgeteilt, und die Test- und Trainingsdaten zusammen mit den Vorhersagen werden visualisiert. Die Daten werden nach Geschlecht eingefärbt, und die Vorhersagen des Modells werden als Linien dargestellt.

Bei den Regressions Darstellungen, sieht man bei zusätzlichen Betrachten des Datensatzes, dass die Vorhersagen recht gut liegen, da es insgesamt tatsächlich mehr männliche Kinder und Jugegendliche adoptiert werden, als weibliche und dass die Anzahl an Adoptionen weiter leicht sinkt.
"""

import matplotlib.pyplot as plt
import pandas as pd
import requests
from io import StringIO
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

# Funktion zum Einlesen des CSV von GitHub
def read_csv_from_github(url):
    response = requests.get(url)
    data = response.content.decode('utf-8')
    return pd.read_csv(StringIO(data))

# CSV-URL
url = 'https://raw.githubusercontent.com/skamins3/adoption_nrw/main/adoption_nrw.csv'

# Daten einlesen
df = read_csv_from_github(url)

# Filtern der Daten für die Jahre 2003 bis 2013
filtered_df = df[(df['Jahr'] >= 2003) & (df['Jahr'] <= 2023)]

# Kodieren des Geschlechts
label_encoder = LabelEncoder()
filtered_df['Geschlecht_encoded'] = label_encoder.fit_transform(filtered_df['Geschlecht'])

# Größe des Diagrams einstellen
plt.figure(figsize=(20, 10))

# Entscheide wie viele Spalten und welche Spalten jeweils Trainiert und getestet werden
# Bsp: range(3,len(filtered_df.columns)) sagt spalte 3 bis ende der liste
for i in range(3,10):
  print(filtered_df.columns[i])
  # Filtere die Daten nach Eingabe und erwartete Ausgabe
  X = filtered_df[['Jahr', 'Geschlecht_encoded']]
  y = filtered_df[filtered_df.columns[i]]


  # Aufteilen der Daten in Trainings- und Testdatensätze
  X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.6, random_state=42)

  # Lineare Regression Modell erstellen und trainieren
  model = LinearRegression()
  model.fit(X_train, y_train)

  # Vorhersagen für den Testdatensatz machen
  predictions = model.predict(X_test)


  # Bewertung des Modells
  mse = mean_squared_error(y_test, predictions)
  print("Mean Squared Error " + filtered_df.columns[i]+ " : {:.2f}".format(mse))

  # Kreuzvalidierung und Berechnung der Scores
  scores = cross_val_score(reg, X_train, y_train, cv=5, scoring="neg_mean_squared_error")*-1
  print("Cross-validation scores: {}".format(scores))
  print("Average score: {:.2f}".format(scores.mean()))

  # Getrennte Vorhersagen auf der Grundlage von Geschlecht_encoded
  predictions_male = predictions[X_test['Geschlecht_encoded'] == 0]
  predictions_female = predictions[X_test['Geschlecht_encoded'] == 1]
  years_male = X_test[X_test['Geschlecht_encoded'] == 0]['Jahr']
  years_female = X_test[X_test['Geschlecht_encoded'] == 1]['Jahr']


  plt.scatter(X_test[X_test['Geschlecht_encoded'] == 0]["Jahr"], y_test[X_test['Geschlecht_encoded'] == 0], label="männlich" + filtered_df.columns[i])
  plt.scatter(X_test[X_test['Geschlecht_encoded'] == 1]["Jahr"], y_test[X_test['Geschlecht_encoded'] == 1], label="weiblich" + filtered_df.columns[i])
  plt.plot(years_male, predictions_male, label="Regression (männlich) " + filtered_df.columns[i])
  plt.plot(years_female, predictions_female, label="Regression (weiblich) " + filtered_df.columns[i])

  plt.legend()
  # Legende außerhalb des Plots platzieren
  plt.legend(loc='center left', bbox_to_anchor=(1, 0.5))
  # Beschriftungen und Titel mit geeigneter Schriftgröße hinzufügen
  plt.xlabel("Jahr", fontsize=14)
  plt.ylabel("Insgesamte Anzahl", fontsize=14)
  plt.title("Testergebnisse", fontsize=16)

  # Plotgrenzen anpassen
  plt.xlim([2002, 2023])
  plt.ylim([0, 170])

  #  Layout anpassen, um Überschneidungen zu vermeiden
  plt.tight_layout()
  plt.show

"""In diesem Skript werden die Daten zu Adoptionen aus Nordrhein-Westfalen (NRW) von GitHub eingelesen und für den Zeitraum von 2003 bis 2022 gefiltert. Anschließend werden die Daten kodiert, wobei das Geschlecht der Adoptierten in numerische Werte (0 für männlich und 1 für weiblich) umgewandelt wird.

Eine Schleife wird verwendet, um für eine bestimmte Anzahl von Spalten in den Daten Trainings- und Testdatensätze zu erstellen sowie separate lineare Regressionsmodelle für jedes Alter der adoptierten Kinder und Jugendlichen zu trainieren und zu testen. Die Schleife wird durchgeführt für Spalten im Bereich von der vierten bis zur zehnten Spalte in den Daten, wobei jede Spalte das Alter der adoptierten Kinder und Jugendlichen für verschiedene Altergruppen repräsentiert. Durch die Verwendung von range(3,10) werden die Indizes der Spalten festgelegt, die für das Training und Testen verwendet werden sollen.

Danach werden die Daten in Trainings- und Testdatensätze aufgeteilt, wobei 60% der Daten für das Training und 40% für das Testen verwendet werden. Für jede Spalte ab dem vierten Index in den Daten wird ein separates lineares Regressionsmodell erstellt und trainiert, um das Alter der adoptierten Kinder und Jugendlichen vorherzusagen.

Für jedes dieser Modelle werden Vorhersagen für den Testdatensatz gemacht, und der Mean Squared Error (MSE) wird berechnet, um die Leistung des Modells zu bewerten. Zusätzlich wird eine Kreuzvalidierung durchgeführt, um die Robustheit des Modells zu überprüfen.
Das Modell zeigt eine recht gute Leistung für die Altersgruppen unter 1 Jahr, 6 bis 9 Jahre und 9 bis 12 Jahre, mit niedrigen Mean Squared Errors (MSE) sowohl für das Testdatenset als auch für die Kreuzvalidierung.
Für die Altersgruppen von 3 bis 6 Jahren und von 12 bis 15 Jahren zeigt das Modell eine moderate Leistung, wobei der MSE für die Kreuzvalidierung variiert, aber insgesamt akzeptabel ist.
Schwierigkeiten scheint das Modell bei den Altersgruppen von 1 bis 3 Jahren und von 15 bis 18 Jahren zu haben, da der MSE für diese Gruppen höher ist, was auf eine geringere Genauigkeit der Vorhersagen hinweisen könnte.

Die Vorhersagen des Modells werden dann basierend auf dem kodierten Geschlecht aufgeteilt, in verschiedene Altersgruppen unterteilt und die Testdaten sowie die Vorhersagen werden visualisiert. Die Datenpunkte werden nach Geschlecht eingefärbt, und die Vorhersagen des Modells werden als Linien dargestellt.

Am Ende wird ein Diagramm erstellt, das die Testergebnisse für das Alter der adoptierten Kinder und Jugendlichen über den Zeitraum von 2003 bis 2022 zeigt, wobei sowohl die tatsächlichen Datenpunkte als auch die Vorhersagen des Modells für männliche und weibliche Adoptierte dargestellt werden. Die Legende wird außerhalb des Diagramms platziert, um Überschneidungen zu vermeiden, und die Achsenbeschriftungen und der Titel werden mit geeigneter Schriftgröße hinzugefügt.

Man sieht auch hier auch tatsächliche Überschneidungen mit den tatsächlichen Daten aus dem Datensatz. Zum Beispiel das Ansteigen der Adoptionen der unter Einjährigen Kinder, sowie das Anschsteigen der Adoptionen der 3 bis 6 Jährigen Kinder und das Fallen der anderen Altersgruppen.

# 5. Schlussfolgerungen

In meiner Analyse von Daten zu Adoptionen aus Nordrhein-Westfalen (NRW) von 2003 bis 2022 habe ich verschiedene Aspekte untersucht, um Vorhersagen über Adoptionstrends zu treffen. Durch die Anwendung eines linearen Regressionsmodells konnte ich die Anzahl der Adoptionen im Zeitverlauf vorhersagen und die Leistung des Modells anhand von Metriken wie dem Mean Squared Error (MSE) bewerten. Die Ergebnisse zeigten eine moderate Vorhersageleistung, wobei das Modell einen MSE von 1554.33 für das Trainingsdatenset aufwies und eine durchschnittliche MSE von 1868.02 über alle Faltungen in der Kreuzvalidierung erreichte.
Darüber hinaus habe ich die Vorhersagen des Modells nach dem Geschlecht der Adoptierten analysiert und visualisiert. Dabei wurden interessante Unterschiede in den Vorhersagen für männliche und weibliche Adoptierte festgestellt.
Eine vertiefte Analyse der Vorhersagen nach dem Alter der adoptierten Kinder und Jugendlichen zeigte, dass das Modell für bestimmte Altersgruppen besser abschnitt als für andere. Insbesondere für Kinder im Alter von unter 1 Jahr, 6 bis 9 Jahren und 9 bis 12 Jahren zeigte das Modell eine gute Leistung, während es für andere Altersgruppen wie 1 bis 3 Jahre und 15 bis 18 Jahre weniger genau war.
Zusammenfassend zeigt meine Analyse, dass ein lineares Regressionsmodell eine nützliche Methode zur Vorhersage von Adoptionstrends sein kann, insbesondere wenn es um das Alter der adoptierten Kinder und Jugendlichen geht. Allerdings ist es wichtig, die Ergebnisse kritisch zu betrachten und die Grenzen des Modells zu berücksichtigen, insbesondere in Bezug auf die Vorhersagegenauigkeit für bestimmte Altersgruppen. Weitere Forschung und eine ausführlichere Analyse könnten dazu beitragen, die Leistung des Modells zu verbessern und seine Anwendbarkeit für die Vorhersage von Adoptionstrends zu erweitern.

In der Schlussfolgerung meiner Untersuchung ist es wichtig anzumerken, wie die vorgestellten Ergebnisse potenzielle Anwendungen und Implikationen für zukünftige Forschung aufzeigen.
Erstens bieten die Vorhersagemodelle einen Einblick in mögliche Anwendungen, darunter die Gestaltung von Politikmaßnahmen zur Unterstützung von Adoptionen, die Verbesserung von Dienstleistungen für adoptierte Kinder und ihre Familien sowie die Förderung weiterer Forschung und Entwicklung auf diesem Gebiet.
Zweitens haben die Beobachtungen zu Geschlechts- und Alterspräferenzen in den Adoptionsmustern wichtige Fragen aufgeworfen, die weitere Untersuchungen rechtfertigen würden. Die Tatsache, dass männliche Kinder und jüngere Kinder in unserem Modell bevorzugt werden, könnte auf verschiedene soziokulturelle oder strukturelle Faktoren zurückzuführen sein, die eingehender analysiert werden sollten.
Drittens eröffnete sich neue Idee, verschiedene Arten von Adoptionen zu untersuchen, um verschiedene Perspektiven zu sehen. Die Analyse verschiedener Adoptionsformen könnte dazu beitragen, spezifische Muster oder Faktoren zu identifizieren, die die Entscheidungen und Präferenzen der Beteiligten beeinflussen. Eine vertiefte Analyse dieser Trends könnte dazu beitragen, das Verständnis für die Vielfalt der Adoptionspraktiken zu vertiefen und die Unterstützung für adoptierte Kinder und ihre Familien zu verbessern.
Durch die Berücksichtigung dieser Aspekte in der Schlussfolgerung wird die potenzielle Wege für zukünftige Forschung und Anwendungen aufgezeigt.
"""